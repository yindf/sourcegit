<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:m="using:SourceGit.Models"
             xmlns:vm="using:SourceGit.ViewModels"
             xmlns:v="using:SourceGit.Views"
             xmlns:c="using:SourceGit.Converters"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="SourceGit.Views.RepositoryGroup"
             x:DataType="vm:RepositoryGroup">
  <Grid RowDefinitions="*">

    <Border Grid.Row="1">
    <Grid Grid.Row="0" Margin="0,8">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{Binding Source={x:Static vm:Preference.Instance}, Path=Layout.GroupSidebarWidth, Mode=TwoWay}" MinWidth="200" MaxWidth="500"/>
        <ColumnDefinition Width="3"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      
      <Grid Grid.Column="0" RowDefinitions="Auto,Auto,*">


        <!-- Search Box -->
        <StackPanel Grid.Row="0" Orientation="Horizontal">
          <Button Classes="icon_button" Width="32" Margin="16,0,0,0"  Click="Fetch">
            <ToolTip.Tip>
              <StackPanel Orientation="Vertical">
                <TextBlock Text="{DynamicResource Text.Fetch}"/>
                <TextBlock Classes="small italic" Margin="0,4,0,0" Text="{DynamicResource Text.CtrlClickTip}" Foreground="{DynamicResource Brush.FG2}"/>
              </StackPanel>
            </ToolTip.Tip>

            <Path Width="14" Height="14" Data="{StaticResource Icons.Fetch}"/>
          </Button>

          <Button Classes="icon_button" Width="32" Margin="16,0,0,0" Click="Pull">
            <ToolTip.Tip>
              <StackPanel Orientation="Vertical">
                <TextBlock Text="{DynamicResource Text.Pull}"/>
                <TextBlock Classes="small italic" Margin="0,4,0,0" Text="{DynamicResource Text.CtrlClickTip}" Foreground="{DynamicResource Brush.FG2}"/>
              </StackPanel>
            </ToolTip.Tip>

            <Path Width="14" Height="14" Data="{StaticResource Icons.Pull}"/>
          </Button>

          <Button Classes="icon_button" Width="32" Margin="16,0,0,0" Click="Push">
            <ToolTip.Tip>
              <StackPanel Orientation="Vertical">
                <TextBlock Text="{DynamicResource Text.Push}"/>
                <TextBlock Classes="small italic" Margin="0,4,0,0" Text="{DynamicResource Text.CtrlClickTip}" Foreground="{DynamicResource Brush.FG2}"/>
              </StackPanel>
            </ToolTip.Tip>

            <Path Width="14" Height="14" Data="{StaticResource Icons.Push}"/>
          </Button>

          <Button Classes="icon_button" Width="100" Margin="16,0,0,0" Click="Changes">
            <StackPanel Orientation="Horizontal">
              <Path Width="12" Height="12" Data="{StaticResource Icons.Changes}"/>
              <TextBlock Classes="primary" Text="{DynamicResource Text.WorkingCopy}"/>
            </StackPanel>
          </Button>
        </StackPanel>
        
        <!-- Search Box -->
        <TextBox Grid.Row="1"
                 x:Name="SearchBox"
                 Height="32"
                 Padding="0"
                 CornerRadius="16"
                 BorderBrush="{DynamicResource Brush.Border0}"
                 BorderThickness="1"
                 Background="{DynamicResource Brush.Contents}"
                 VerticalContentAlignment="Center"
                 Text="{Binding SearchFilter, Mode=TwoWay}"
                 v:AutoFocusBehaviour.IsEnabled="True">
          <TextBox.Styles>
            <Style Selector="TextBox:pointerover /template/ Border#PART_BorderElement">
              <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border0}"/>
            </Style>
            <Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
              <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border0}"/>
            </Style>
          </TextBox.Styles>

          <TextBox.InnerLeftContent>
            <Path Width="16" Height="16" Margin="6,0,3,0" Data="{StaticResource Icons.Search}" Fill="{DynamicResource Brush.FG2}"/>
          </TextBox.InnerLeftContent>

          <TextBox.InnerRightContent>
            <Button Classes="icon_button" IsVisible="{Binding SearchFilter, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Command="{Binding ClearSearchFilter}">
              <Path Width="16" Height="16" Margin="0,0,0,0" Data="{StaticResource Icons.Clear}" Fill="{DynamicResource Brush.FG1}"/>
            </Button>
          </TextBox.InnerRightContent>
        </TextBox>


        <!-- Repository Tree -->
        <v:RepositoryListBox Grid.Row="2"
                             x:Name="TreeContainer"
                             Margin="0,8,8,0"
                             Focusable="True"
                             Background="Transparent"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ItemsSource="{Binding Rows}"
                             SelectionMode="Single"
                             LostFocus="OnTreeViewLostFocus"
                             KeyDown="OnTreeViewKeyDown">
          <ListBox.Styles>
            <Style Selector="ListBox">
              <Setter Property="FocusAdorner">
                <FocusAdornerTemplate>
                  <Border Background="Transparent" BorderThickness="0"/>
                </FocusAdornerTemplate>
              </Setter>
            </Style>

            <Style Selector="ListBoxItem" x:DataType="vm:RepositoryNode">
              <Setter Property="Margin" Value="0"/>
              <Setter Property="Padding" Value="0"/>
              <Setter Property="Height" Value="30"/>
              <Setter Property="CornerRadius" Value="4"/>
              <Setter Property="FocusAdorner">
                <FocusAdornerTemplate>
                  <Border Background="Transparent" BorderThickness="0"/>
                </FocusAdornerTemplate>
              </Setter>
            </Style>
          </ListBox.Styles>

          <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel Orientation="Vertical"/>
            </ItemsPanelTemplate>
          </ListBox.ItemsPanel>

          <ListBox.ContextMenu>
            <ContextMenu>
              <MenuItem Header="{DynamicResource Text.Welcome.AddRootFolder}" Command="{Binding AddRootNode}">
                <MenuItem.Icon>
                  <Path Width="12" Height="12" Data="{DynamicResource Icons.Folder.Add}"/>
                </MenuItem.Icon>
              </MenuItem>
            </ContextMenu>
          </ListBox.ContextMenu>

          <ListBox.ItemTemplate>
            <DataTemplate DataType="vm:RepositoryNode">
              <Grid Background="Transparent"
                    Height="30"
                    ColumnDefinitions="16,18,Auto,*"
                    Margin="{Binding Depth, Converter={x:Static c:IntConverters.ToTreeMargin}}"
                    ContextRequested="OnTreeNodeContextRequested"
                    PointerPressed="OnPointerPressedTreeNode"
                    PointerMoved="OnPointerMovedOverTreeNode"
                    PointerReleased="OnPointerReleasedOnTreeNode"
                    DoubleTapped="OnDoubleTappedTreeNode"
                    ClipToBounds="True">
                <v:RepositoryTreeNodeToggleButton Grid.Column="0"
                                                  Classes="tree_expander"
                                                  Focusable="False"
                                                  HorizontalAlignment="Center"
                                                  IsChecked="{Binding IsExpanded, Mode=OneWay}"
                                                  IsVisible="{Binding HasChildren}"/>

                <Path Grid.Column="1"
                      Width="14" Height="14"
                      Fill="{Binding Bookmark, Converter={x:Static c:IntConverters.ToBookmarkBrush}}"
                      HorizontalAlignment="Center"
                      Data="{StaticResource Icons.Bookmark}"
                      IsVisible="{Binding IsRepository}"/>

                <ToggleButton Grid.Column="1"
                              Classes="folder"
                              Focusable="False"
                              Width="14" Height="14"
                              HorizontalAlignment="Left"
                              Foreground="{DynamicResource Brush.FG1}"
                              IsChecked="{Binding IsExpanded}"
                              IsVisible="{Binding HasChildren}"/>

                <StackPanel Grid.Column="2" Orientation="Horizontal">
                  <v:LoadingIcon Grid.Column="3" Width="14" Height="14" Margin="8,0,0,0" IsVisible="{Binding Repo.IsBusy, FallbackValue=false}"/>
                  <TextBlock Classes="primary" Margin="0,0,8,0" VerticalAlignment="Center" Text="{Binding Repo.CurrentBranch.TrackStatus}"/>
                  <TextBlock Classes="primary" VerticalAlignment="Center" Text="{Binding Name}"/>
                  <v:CounterPresenter
                    Margin="6,0"
                    VerticalAlignment="Center"
                    Count="{Binding Repo.LocalChangesCount}"
                    IsVisible="{Binding Repo.LocalChangesCount}"
                    FontFamily="{DynamicResource Fonts.Monospace}"
                    FontSize="10"
                    Foreground="{DynamicResource Brush.BadgeFG}"
                    Background="{DynamicResource Brush.Badge}"/>
                  <Path Margin="2,0,0,0"
                        Width="12" Height="12"
                        Data="{StaticResource Icons.Error}"
                        Fill="Orange"
                        IsVisible="{Binding IsInvalid}"/>
                </StackPanel>
              </Grid>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </v:RepositoryListBox>
      </Grid>


      <!-- Splitter -->
      <GridSplitter Grid.Column="1"
                    MinWidth="1"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Background="Transparent"
                    BorderThickness="0,0,1,0"
                    BorderBrush="{DynamicResource Brush.Border0}"/>
      
      <!-- Body -->
      <Grid Grid.Column="2" RowDefinitions="Auto,*">
        <!-- Confict, Merge status bar -->
        <Grid Grid.Row="0" Height="28" ColumnDefinitions="*,Auto,Auto,Auto" Background="{DynamicResource Brush.Conflict}" IsVisible="{Binding InProgressContext, Converter={x:Static ObjectConverters.IsNotNull}}">
          <ContentControl Grid.Column="0" Margin="8,0" Content="{Binding InProgressContext}">
            <ContentControl.DataTemplates>
              <DataTemplate DataType="vm:CherryPickInProgress">
                <TextBlock FontWeight="Bold" Foreground="{DynamicResource Brush.ConflictForeground}" Text="{DynamicResource Text.InProgress.CherryPick}"/>
              </DataTemplate>

              <DataTemplate DataType="vm:RebaseInProgress">
                <TextBlock FontWeight="Bold" Foreground="{DynamicResource Brush.ConflictForeground}" Text="{DynamicResource Text.InProgress.Rebase}"/>
              </DataTemplate>

              <DataTemplate DataType="vm:RevertInProgress">
                <TextBlock FontWeight="Bold" Foreground="{DynamicResource Brush.ConflictForeground}" Text="{DynamicResource Text.InProgress.Revert}"/>
              </DataTemplate>

              <DataTemplate DataType="vm:MergeInProgress">
                <TextBlock FontWeight="Bold" Foreground="{DynamicResource Brush.ConflictForeground}" Text="{DynamicResource Text.InProgress.Merge}"/>
              </DataTemplate>
            </ContentControl.DataTemplates>
          </ContentControl>

          <Button Grid.Column="2"
                  Classes="flat primary"
                  FontWeight="Regular"
                  BorderThickness="0"
                  Content="{DynamicResource Text.Repository.Continue}"
                  Padding="8,0" Margin="4,0"
                  Command="{Binding ContinueMerge}"
                  IsVisible="{Binding !HasUnsolvedConflicts}"/>
          <Button Grid.Column="3"
                  Classes="flat"
                  FontWeight="Regular"
                  BorderThickness="0"
                  Content="{DynamicResource Text.Repository.Abort}"
                  Padding="8,0" Margin="4,0"
                  Command="{Binding AbortMerge}"/>
        </Grid>

        <!-- working copy -->
        <Border Grid.Row="1">
          <ContentControl Content="{Binding Data}">
            <ContentControl.DataTemplates>

              <DataTemplate DataType="vm:Repository">
                <v:Repository/>
              </DataTemplate>

              <DataTemplate DataType="vm:WorkingCopyGroup">
                <v:WorkingCopyGroup/>
              </DataTemplate>

            </ContentControl.DataTemplates>
          </ContentControl>
        </Border>
      </Grid>
    </Grid>
    </Border>
    
  </Grid>
</UserControl>
